---
version: 2.1

orbs:
  win: circleci/windows@2.2.0

_refs:
  defaults: &defaults
    working_directory: ~/cli
    docker:
      - image: node:12
  ssh-config: &ssh-config
    fingerprints:
      - '1d:a9:9c:29:62:13:c9:db:f6:df:06:89:02:24:40:4a'
  restore_cache: &restore_cache
    keys:
      - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
      - v1-npm-{{checksum ".circleci/config.yml"}}
  gh-config: &gh-config
    name: Configuring GitHub
    command: |
      git config credential.helper 'cache --timeout=120'
      git config user.email "$GH_EMAIL"
      git config user.name "Release Bot"
  install: &install
    name: Install dependencies
    command: |
      yarn --version
      node --version
      yarn
  build: &build
    name: Build project
    command: yarn build
  test: &test
    name: Run tests with coverage
    command: yarn coverage
  gus-create-change-mgmt: &gus-create-change-mgmt
    name: 'Gus create change case management'
    command: |
      yarn global add @salesforce/change-case-management
      sfchangecase create -i 500B0000005jCcNIAU --release offcore.tooling.${GUS_BUILD} --location '${REPO_LOCATION}'
      sfchangecase check --release offcore.tooling.${GUS_BUILD} --location '${REPO_LOCATION}'
  gus-close-change-mgmt: &gus-close-change-mgmt
    name: 'Gus close change case management'
    command: |
      sfchangecase update --location '${REPO_LOCATION}' --release offcore.tooling.${GUS_BUILD} --status 'Closed - Deploy Successful'

jobs:
  node-latest: &node-test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *install
      - run: *build
      - run: *test
  node-12:
    <<: *node-test
    docker:
      - image: node:12
  node-10:
    <<: *node-test
    docker:
      - image: node:10
  cache:
    <<: *node-test
    steps:
      - checkout
      - run: *install
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn
  run-win-tests:
    description: 'Run tests on Windows'
    executor: win/default
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            # if cache for exact version of 'package.json' is not present, then load the most recent cache
            - dependency-cache-win1-
      - run: *install
      - save_cache:
          key: dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - node_modules
      - run: *build
      - run: *test
  release:
    <<: *defaults
    steps:
      - add_ssh_keys: *ssh-config
      - checkout
      - restore_cache: *restore_cache
      - run: *gh-config
      - run: *install
      - run:
          name: Get gus build version
          command: |
            export GUS_BUILD="$(node -pe "require('./package.json').gusBuild")"
            echo "Gus build is ${GUS_BUILD}"
      - run: *gus-create-change-mgmt
      - run: *build
      - run:
          name: Bump package version
          command: |
            yarn version --patch --no-git-tag-version
            git add package.json
            git commit -m "[skip ci] Updated version"
      - run:
          name: Set .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run: yarn publish --non-interactive
      - run: git push origin master
      - run:
          name: Tag the release and push to repo
          command: |
            export RELEASE_TAG="$(node -pe "require('./package.json').version")"
            git tag v${RELEASE_TAG}
            git push --tags
      - run: *gus-close-change-mgmt

workflows:
  version: 2
  'deploy-and-retrieve':
    jobs:
      - node-latest
      - node-12
      - node-10
      - cache:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - run-win-tests
      - release:
          filters:
            branches:
              only:
                - master
          requires:
            - node-latest
            - node-12
            - node-10
            - run-win-tests
