version: 2.1
orbs:
  release-management: salesforce/npm-release-management@4
  slack: circleci/slack@3.4.2

jobs:
  registry-check:
    description: Checks registry against metadataCoverageReport
    docker:
      - image: node:lts
    steps:
      - checkout
      - run: yarn install
      - run: yarn build
      - run: yarn test:registry

  external-nut:
    description: Runs NUTs from other (external) repos by cloning them.  Substitutes a dependency for the current pull request.  For example, you're testing a PR to a library and want to test a plugin in another repo that uses the library.

    parameters:
      node_version:
        description: version of node to run tests against
        type: string
        default: 'latest'
      os:
        description: operating system to run tests on
        type: enum
        enum: ['linux', 'windows']
        default: 'linux'
      sfdx_version:
        description: 'By default, the latest version of the standalone CLI will be installed. To install via npm, supply a version tag such as "latest" or "6".'
        default: ''
        type: string
      sfdx_executable_path:
        description: "Path to sfdx executable to be used by NUTs, defaults to ''"
        default: ''
        type: string
      external_project_git_url:
        description: 'The url that will be cloned.  This contains the NUTs you want to run.  Ex: https://github.com/salesforcecli/plugin-user'
        type: string
        default: ''
      size:
        type: enum
        description: |
          The size of machine resource to use. Defaults to medium.
        default: medium
        enum:
          - medium
          - large
          - xlarge
          - 2xlarge

    executor:
      name: release-management/<< parameters.os >>
      size: << parameters.size >>

    environment:
      TESTKIT_EXECUTABLE_PATH: <<parameters.sfdx_executable_path>>

    steps:
      - release-management/install-node:
          version: <<parameters.node_version>>
          os: <<parameters.os>>
      - release-management/install-sfdx:
          version: <<parameters.sfdx_version>>
          os: <<parameters.os>>
      - run: git clone <<parameters.external_project_git_url>> $(pwd)
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: swap dependencies
          command: yarn remove @salesforce/source-deploy-retrieve && yarn add $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME#$CIRCLE_SHA1
      - run:
          name: install/build <<parameters.external_project_git_url>> in node_modules
          # why doesn't SDR put the registry.json in the lib when run from inside a node module?  I don't know.
          # prevent dependency conflicts between plugin's top-level imports and imported SDR's deps by deleting them
          # If there are real conflicts, we'll catch them when bumping a version in the plugin (same nuts)
          command: |
            yarn install
            rm -rf node_modules/@salesforce/kit
            rm -rf node_modules/@salesforce/core
            yarn build
            cp src/registry/registry.json lib/src/registry
          working_directory: node_modules/@salesforce/source-deploy-retrieve
      - run:
          name: Build the external project
          command: |
            yarn build
      - release-management/verify-installed-plugin
      - run:
          name: set TESTKIT_ENABLE_ZIP for artifacts on linux
          command: echo "export TESTKIT_ENABLE_ZIP=true" >> $BASH_ENV
      - run:
          name: Nuts
          command: |
            echo "Using node: $(node --version)"
            echo "Environment Variables:"
            env
            NODE_OPTIONS=--max-old-space-size=8192 yarn test:nuts
workflows:
  version: 2
  registry-check:
    triggers:
      - schedule:
          # early in the morning (cron is GMT)
          cron: 8 22 * * *
          filters:
            branches:
              only:
                - main
    jobs:
      - registry-check
  test-and-release:
    jobs:
      - release-management/validate-pr:
          filters:
            branches:
              ignore: main
      - release-management/test-package:
          matrix:
            parameters:
              os:
                - linux
                - windows
              node_version:
                - latest
                - lts
                - maintenance
            exclude:
              - os: windows
                node_version: lts
              - os: windows
                node_version: maintenance
      - external-nut:
          filters:
            branches:
              # we don't run again on main because
              # 1) we already ran on a branch
              # 2) they aren't required and would run in parallel to release job
              ignore: main
          requires:
            - release-management/test-package
          sfdx_version: latest
          size: 2xlarge
          matrix:
            parameters:
              os: [linux]
              node_version: [lts]
              external_project_git_url:
                [
                  'https://github.com/salesforcecli/plugin-source'
                ]
      - release-management/release-package:
          github-release: true
          post-job-steps:
            - when: on_success
            - run: yarn ci-docs
            - slack/notify:
                channel: 'cli-team-notifications'
                color: '#9bcd9b'
                message: 'SDR Library has been published to npm'
          requires:
            - release-management/test-package
          filters:
            branches:
              only: main
          context: CLI_CTC
